{"ast":null,"code":"var _jsxFileName = \"C:\\\\golden_gryphons\\\\golden-gryphons\\\\golden-gryphons-react\\\\src\\\\Components\\\\Main\\\\MatchCentre\\\\Ladder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport xml2js from \"xml2js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ladder = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"ladder.xml\");\n      const xml = await response.text();\n      const parser = new xml2js.Parser();\n      parser.parseString(xml, (err, result) => {\n        const ladderData = result.ladder.team.map(team => ({\n          name: team.name[0],\n          played: team.played[0],\n          won: team.won[0],\n          lost: team.lost[0],\n          drawn: team.drawn[0],\n          points: team.points[0]\n        }));\n        setData(ladderData);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ladder\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Won\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Drawn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((team, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.played\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.won\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.lost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.drawn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Ladder, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Ladder;\nexport default Ladder;\nvar _c;\n$RefreshReg$(_c, \"Ladder\");","map":{"version":3,"names":["React","useState","useEffect","xml2js","jsxDEV","_jsxDEV","Ladder","_s","data","setData","fetchData","response","fetch","xml","text","parser","Parser","parseString","err","result","ladderData","ladder","team","map","name","played","won","lost","drawn","points","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/golden_gryphons/golden-gryphons/golden-gryphons-react/src/Components/Main/MatchCentre/Ladder.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport xml2js from \"xml2js\";\r\n\r\nconst Ladder = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\"ladder.xml\");\r\n      const xml = await response.text();\r\n      const parser = new xml2js.Parser();\r\n      parser.parseString(xml, (err, result) => {\r\n        const ladderData = result.ladder.team.map((team) => ({\r\n          name: team.name[0],\r\n          played: team.played[0],\r\n          won: team.won[0],\r\n          lost: team.lost[0],\r\n          drawn: team.drawn[0],\r\n          points: team.points[0],\r\n        }));\r\n        setData(ladderData);\r\n      });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ladder\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Team</th>\r\n            <th>Played</th>\r\n            <th>Won</th>\r\n            <th>Lost</th>\r\n            <th>Drawn</th>\r\n            <th>Points</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((team, index) => (\r\n            <tr key={index}>\r\n              <td>{team.name}</td>\r\n              <td>{team.played}</td>\r\n              <td>{team.won}</td>\r\n              <td>{team.lost}</td>\r\n              <td>{team.drawn}</td>\r\n              <td>{team.points}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ladder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}